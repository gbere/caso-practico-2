---
# playbook para la linux vm

- name: 'VM - Aplicaci√≥n Web'
  hosts: vm1
  remote_user: azureuser
  become: true
  vars_files:
     - vars/private_vars.yaml
     - vars/common_vars.yaml
     - vars/vm1_vars.yaml
  tasks:

    - name: 'Actualizar la zona horaria'
      timezone:
        name: "{{ timezone }}"

    - name: 'Actualizar todos los paquetes instalados'
      yum:
        name: '*'
        state: latest
        update_cache: yes

    - name: 'Instalar los paquetes que necesitamos'
      yum:
        name: "{{ packages_to_install }}" 
        state: latest

    - name: Identificarnos en nuestro Azure container registry y creamos ${XDG_RUNTIME_DIR}/containers/auth.json
      containers.podman.podman_login:
        registry: "{{ cr_registry }}"
        username: "{{ cr_username }}"
        password: "{{ cr_password }}"

    - name: Copiar archivos para crear el contenedor symfony-demo
      ansible.builtin.copy:
        src: symfony-demo
        dest: ~/

    - name: Generar y una clave privada OpenSSL
      community.crypto.openssl_privatekey:
        path: ~/symfony-demo/ssl/private/sf-demo.key
        size: 2048

    - name: Generar un certificado OpenSSL
      community.crypto.openssl_csr:
        path: ~/symfony-demo/ssl/private/sf-demo.csr
        privatekey_path: ~/symfony-demo/ssl/private/sf-demo.key
        country_name: ES
        organization_name: DevOps
        common_name: vm1

    - name: Generar certificado OpenSSL autofirmado
      community.crypto.x509_certificate:
        path: ~/symfony-demo/ssl/private/sf-demo.crt
        privatekey_path: ~/symfony-demo/ssl/private/sf-demo.key
        csr_path: ~/symfony-demo/ssl/private/sf-demo.csr
        provider: selfsigned

    - name: Generar DH Parameters
      community.crypto.openssl_dhparam:
        path: ~/symfony-demo/ssl/private/dh2048.pem
        size: 2048

    - name: Construir y subir la imagen al registro privado
      containers.podman.podman_image:
        name: "{{ img_name_sf_demo }}"
        tag: "{{ img_tag_name_cp2 }}"
        path: ~/symfony-demo
        push: yes
        push_args:
          dest: "{{ cr_registry }}"

    - name: Iniciar contenedor con la imagen symfony-demo:casopractico2 y crear un servicio para systemd
      containers.podman.podman_container:
        name: "{{ img_name_sf_demo }}"
        image: "{{ img_name_sf_demo }}:{{ img_tag_name_cp2 }}"
        detach: true
        expose:
          - 443
        publish:
          - 443:443
        state: created
        generate_systemd:
          path: /etc/systemd/system/
          restart_policy: on-failure
          time: 120
          names: true

    - name: Activar y iniciar container-symfony-demo.service
      ansible.builtin.systemd:
        name: "container-{{ img_name_sf_demo }}.service"
        enabled: true
        state: started

    # TODO: Enable firewall?
